DEF_VAR
 name="foo"
 return_type="BYTE"
 size=1
 initializer=[0]
 index_type="BYTE"

DEF_FUN
 type="DEF_FUN"
 name="foo"
 return_type="BYTE"
 size=1
 args=AstList
 local=AstDict
 body=AstList

CALL
 type="CALL"
 name="inc"
 args=AstList
 return_type="BYTE"

IF
 type="IF"
 branches=
  AstList
   type="ELSE_IF"
   expr=AstNode
   body=AstNode
 _else: AstNode
  type="ELSE"
  body=AstNode


DATA AS BYTE
string
word
int
long
@ var def
fast
memcpy
memset
for
break / continue
asm
interrupts
switch
